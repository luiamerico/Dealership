CREATE TABLE TYPE_SALE (
    ID_TYPE_SALE SERIAL PRIMARY KEY,
    SALE_ITEM VARCHAR(255),
    ITEM_PRICE DECIMAL(10, 2)
);

CREATE TABLE SELLER (
    CPF_SELLER CHAR(11) PRIMARY KEY,
    NAME_SELLER VARCHAR(255)
);

CREATE TABLE CUSTOMER (
    CPF_CUSTOMER CHAR(11) PRIMARY KEY,
    NAME_CUSTOMER VARCHAR(255)
);

CREATE TABLE ADDRESS (
    ID_ADDRESS SERIAL PRIMARY KEY,
    STATE VARCHAR(255),
    CITY VARCHAR(255),
    ZIP_CODE CHAR(8),
    STREET VARCHAR(255),
    NUMBER INT,
    COMPLEMENT VARCHAR(255),
    CPF_CUSTOMER CHAR(11)
);

CREATE TABLE CAR (
    CHASSI CHAR(17) PRIMARY KEY,
    CAR_MODEL VARCHAR(255),
    CAR_YEAR INT,
    CAR_COLOR VARCHAR(255),
    CAR_PRICE DECIMAL(10, 2),
    ENGINE_BLOCK VARCHAR(255),
    LICENSE_PLATE VARCHAR(255)
);

CREATE TABLE PART_CAR (
    SERIAL_NUMBER VARCHAR(255) PRIMARY KEY,
    PART_NAME VARCHAR(255),
    PART_PRICE DECIMAL(10, 2),
    CAR_MODEL VARCHAR(255)
);

CREATE TABLE SERVICE (
    ID_SERVICE SERIAL PRIMARY KEY,
    SERVICE_NAME VARCHAR(255),
    SERVICE_DATE VARCHAR(10),
    SERVICE_PRICE DECIMAL(10, 2),
    CHASSI CHAR(17),
    CPF_CUSTOMER CHAR(11),
    CPF_MECHANIC CHAR(11)
);

CREATE TABLE MECHANIC (
    CPF_MECHANIC CHAR(11) PRIMARY KEY,
    NAME_MECHANIC VARCHAR(255)
);

CREATE TABLE CUSTOMER_CARD (
    CARD_NUMBER CHAR(16) PRIMARY KEY,
    CARD_OWNER VARCHAR(255),
    CARD_VALID VARCHAR(10),
    CVV CHAR(3),
    CPF_CUSTOMER CHAR(11)
);

CREATE TABLE SALE (
    ID_SALE SERIAL PRIMARY KEY,
    SALE_DATE VARCHAR(10),
    CPF_CUSTOMER CHAR(11),
    CPF_SELLER CHAR(11),
    ID_TYPE_SALE INT
);

-- 

ALTER TABLE IF EXISTS public.TYPE_SALE
    OWNER TO postgres;

ALTER TABLE IF EXISTS public.SELLER
    OWNER TO postgres;

ALTER TABLE IF EXISTS public.CUSTOMER
    OWNER TO postgres;

ALTER TABLE IF EXISTS public.ADDRESS
    OWNER TO postgres;

ALTER TABLE IF EXISTS public.CAR
    OWNER TO postgres;

ALTER TABLE IF EXISTS public.PART_CAR
    OWNER TO postgres;

ALTER TABLE IF EXISTS public.SERVICE
    OWNER TO postgres;

ALTER TABLE IF EXISTS public.MECHANIC
    OWNER TO postgres;

ALTER TABLE IF EXISTS public.CUSTOMER_CARD
    OWNER TO postgres;

ALTER TABLE IF EXISTS public.SALE
    OWNER TO postgres;

-- 

ALTER TABLE public.TYPE_SALE RENAME CONSTRAINT TYPE_SALE_pkey TO PK_TYPE_SALE;
ALTER TABLE public.SELLER RENAME CONSTRAINT SELLER_pkey TO PK_SELLER;
ALTER TABLE public.CUSTOMER RENAME CONSTRAINT CUSTOMER_pkey TO PK_CUSTOMER;
ALTER TABLE public.ADDRESS RENAME CONSTRAINT ADDRESS_pkey TO PK_ADDRESS;
ALTER TABLE public.CAR RENAME CONSTRAINT CAR_pkey TO PK_CAR;
ALTER TABLE public.PART_CAR RENAME CONSTRAINT PART_CAR_pkey TO PK_PART_CAR;
ALTER TABLE public.SERVICE RENAME CONSTRAINT SERVICE_pkey TO PK_SERVICE;
ALTER TABLE public.MECHANIC RENAME CONSTRAINT MECHANIC_pkey TO PK_MECHANIC;
ALTER TABLE public.CUSTOMER_CARD RENAME CONSTRAINT CUSTOMER_CARD_pkey TO PK_CUSTOMER_CARD;
ALTER TABLE public.SALE RENAME CONSTRAINT SALE_pkey TO PK_SALE;

--

ALTER TABLE ADDRESS
    ADD CONSTRAINT FK_CUSTOMER_ADDRESS FOREIGN KEY (CPF_CUSTOMER) REFERENCES CUSTOMER(CPF_CUSTOMER);

ALTER TABLE PART_CAR
    ADD CONSTRAINT FK_CAR_MODEL_PART FOREIGN KEY (CAR_MODEL) REFERENCES CAR(CAR_MODEL);

ALTER TABLE SERVICE
    ADD CONSTRAINT FK_CAR_SERVICE FOREIGN KEY (CHASSI) REFERENCES CAR(CHASSI),
    ADD CONSTRAINT FK_CUSTOMER_SERVICE FOREIGN KEY (CPF_CUSTOMER) REFERENCES CUSTOMER(CPF_CUSTOMER),
    ADD CONSTRAINT FK_MECHANIC_SERVICE FOREIGN KEY (CPF_MECHANIC) REFERENCES MECHANIC(CPF_MECHANIC);

ALTER TABLE CUSTOMER_CARD
    ADD CONSTRAINT FK_CUSTOMER_CARD FOREIGN KEY (CPF_CUSTOMER) REFERENCES CUSTOMER(CPF_CUSTOMER);

ALTER TABLE SALE
    ADD CONSTRAINT FK_CUSTOMER_SALE FOREIGN KEY (CPF_CUSTOMER) REFERENCES CUSTOMER(CPF_CUSTOMER),
    ADD CONSTRAINT FK_SELLER_SALE FOREIGN KEY (CPF_SELLER) REFERENCES SELLER(CPF_SELLER),
    ADD CONSTRAINT FK_TYPE_SALE FOREIGN KEY (ID_TYPE_SALE) REFERENCES TYPE_SALE(ID_TYPE_SALE);







